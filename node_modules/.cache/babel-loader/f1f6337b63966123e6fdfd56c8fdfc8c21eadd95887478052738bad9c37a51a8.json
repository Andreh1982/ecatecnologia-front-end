{"ast":null,"code":"var _jsxFileName = \"/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/listallentries/index.js\",\n  _s = $RefreshSig$();\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport Box from \"@mui/material/Box\";\nimport { useEffect, useState } from \"react\";\nimport { DataGrid } from \"@mui/material/x-data-grid\";\nimport * as React from \"react\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  field: \"entry_id\",\n  headerName: \"ID\",\n  width: 70\n}, {\n  field: \"created_at\",\n  headerName: \"First name\",\n  width: 130\n}, {\n  field: \"updated_at\",\n  headerName: \"Last name\",\n  width: 130\n}, {\n  field: \"name\",\n  headerName: \"Full name\",\n  width: 160\n}];\nfunction ListAllEntries() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(async () => {\n    axios.get(\"http://localhost:9001/entries/all\").then(res => {\n      const threads = res;\n      setData(threads);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      mb: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              p: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: \"API List All Entries\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), data.map(object => /*#__PURE__*/_jsxDEV(DataGrid, {\n              rows: object.data,\n              columns: columns,\n              pageSize: 5,\n              checkboxSelection: true,\n              disableSelectionOnClick: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)), \";\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(ListAllEntries, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ListAllEntries;\nexport default ListAllEntries;\nvar _c;\n$RefreshReg$(_c, \"ListAllEntries\");","map":{"version":3,"names":["Typography","axios","Grid","Card","Box","useEffect","useState","DataGrid","React","DashboardLayout","columns","field","headerName","width","ListAllEntries","data","setData","get","then","res","threads","map","object"],"sources":["/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/listallentries/index.js"],"sourcesContent":["import Typography from \"@mui/material/Typography\";\n\nimport axios from \"axios\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport Box from \"@mui/material/Box\";\n\nimport { useEffect, useState } from \"react\";\n\nimport { DataGrid } from \"@mui/material/x-data-grid\";\n\nimport * as React from \"react\";\n\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\n\nconst columns = [\n  { field: \"entry_id\", headerName: \"ID\", width: 70 },\n  { field: \"created_at\", headerName: \"First name\", width: 130 },\n  { field: \"updated_at\", headerName: \"Last name\", width: 130 },\n  { field: \"name\", headerName: \"Full name\", width: 160 },\n];\n\nfunction ListAllEntries() {\n  const [data, setData] = useState([]);\n  useEffect(async () => {\n    axios.get(\"http://localhost:9001/entries/all\").then((res) => {\n      const threads = res;\n      setData(threads);\n    });\n  }, []);\n\n  return (\n    <DashboardLayout>\n      <Box mt={2} mb={1}>\n        <Grid container spacing={1} justifyContent=\"center\">\n          <Grid item xs={12} lg={8}>\n            <Card>\n              <Box p={2}>\n                <Typography variant=\"h5\">API List All Entries</Typography>\n              </Box>\n              {data.map((object) => (\n                <DataGrid\n                  rows={object.data}\n                  columns={columns}\n                  pageSize={5}\n                  checkboxSelection\n                  disableSelectionOnClick\n                />\n              ))};\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n    </DashboardLayout>\n  );\n}\nexport default ListAllEntries;\n"],"mappings":";;AAAA,OAAOA,UAAU,MAAM,0BAA0B;AAEjD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,GAAG,MAAM,mBAAmB;AAEnC,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,QAAQ,QAAQ,2BAA2B;AAEpD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAE9B,OAAOC,eAAe,MAAM,2CAA2C;AAAC;AAExE,MAAMC,OAAO,GAAG,CACd;EAAEC,KAAK,EAAE,UAAU;EAAEC,UAAU,EAAE,IAAI;EAAEC,KAAK,EAAE;AAAG,CAAC,EAClD;EAAEF,KAAK,EAAE,YAAY;EAAEC,UAAU,EAAE,YAAY;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC7D;EAAEF,KAAK,EAAE,YAAY;EAAEC,UAAU,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAI,CAAC,EAC5D;EAAEF,KAAK,EAAE,MAAM;EAAEC,UAAU,EAAE,WAAW;EAAEC,KAAK,EAAE;AAAI,CAAC,CACvD;AAED,SAASC,cAAc,GAAG;EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpCD,SAAS,CAAC,YAAY;IACpBJ,KAAK,CAACgB,GAAG,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MAC3D,MAAMC,OAAO,GAAGD,GAAG;MACnBH,OAAO,CAACI,OAAO,CAAC;IAClB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE,QAAC,eAAe;IAAA,uBACd,QAAC,GAAG;MAAC,EAAE,EAAE,CAAE;MAAC,EAAE,EAAE,CAAE;MAAA,uBAChB,QAAC,IAAI;QAAC,SAAS;QAAC,OAAO,EAAE,CAAE;QAAC,cAAc,EAAC,QAAQ;QAAA,uBACjD,QAAC,IAAI;UAAC,IAAI;UAAC,EAAE,EAAE,EAAG;UAAC,EAAE,EAAE,CAAE;UAAA,uBACvB,QAAC,IAAI;YAAA,wBACH,QAAC,GAAG;cAAC,CAAC,EAAE,CAAE;cAAA,uBACR,QAAC,UAAU;gBAAC,OAAO,EAAC,IAAI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YAAkC;cAAA;cAAA;cAAA;YAAA,QACtD,EACLL,IAAI,CAACM,GAAG,CAAEC,MAAM,iBACf,QAAC,QAAQ;cACP,IAAI,EAAEA,MAAM,CAACP,IAAK;cAClB,OAAO,EAAEL,OAAQ;cACjB,QAAQ,EAAE,CAAE;cACZ,iBAAiB;cACjB,uBAAuB;YAAA;cAAA;cAAA;cAAA;YAAA,QAE1B,CAAC;UAAA;YAAA;YAAA;YAAA;UAAA;QACG;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACU;AAEtB;AAAC,GAjCQI,cAAc;AAAA,KAAdA,cAAc;AAkCvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
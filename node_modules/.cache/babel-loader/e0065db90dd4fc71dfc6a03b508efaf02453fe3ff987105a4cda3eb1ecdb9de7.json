{"ast":null,"code":"var _jsxFileName = \"/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/listallentries/index.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Divider } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport MUIDataTable from \"mui-datatables\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  name: \"name\",\n  label: \"Name\",\n  options: {\n    filter: false,\n    sort: false,\n    customBodyRenderLite: (dataIndex, rowIndex) => {\n      return /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.primary\",\n        children: (dataIndex, rowIndex)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this);\n    }\n  }\n}, {\n  name: \"entryId\",\n  label: \"Entry ID\",\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: \"createdAt\",\n  label: \"Created At\",\n  options: {\n    filter: false,\n    sort: false\n  }\n}, {\n  name: \"updatedAt\",\n  label: \"Updated At\",\n  options: {\n    filter: false,\n    sort: false\n  }\n}];\nconst options = {\n  responsive: \"simple\",\n  rowsPerPage: 20,\n  viewColumns: true,\n  pagination: true,\n  selectableRows: \"none\",\n  rowsPerPageOptions: [20, 50, 100],\n  textLabels: {\n    body: {\n      noMatch: \"Sorry, no matching records found\",\n      toolTip: \"Sort\",\n      columnHeaderTooltip: column => `Sort for ${column.label}`\n    },\n    pagination: {\n      next: \"Next Page\",\n      previous: \"Previous Page\",\n      rowsPerPage: \"Rows per page:\",\n      displayRows: \"of\"\n    },\n    toolbar: {\n      search: \"Search\",\n      downloadCsv: \"Download CSV\",\n      print: \"Print\",\n      viewColumns: \"View Columns\",\n      filterTable: \"Filter Table\"\n    },\n    filter: {\n      all: \"All\",\n      title: \"FILTERS\",\n      reset: \"RESET\"\n    },\n    viewColumns: {\n      title: \"Show Columns\",\n      titleAria: \"Show/Hide Table Columns\"\n    },\n    selectedRows: {\n      text: \"row(s) selected\",\n      delete: \"Delete\",\n      deleteAria: \"Delete Selected Rows\"\n    }\n  },\n  onRowClick: (rowData, rowMeta) => {\n    console.log(rowData);\n    console.log(rowMeta);\n  }\n};\nfunction ListAllEntries() {\n  _s();\n  const [fuckingData, setData] = useState([]);\n  useEffect(async () => {\n    axios.get(\"http://localhost:9001/entries/all\").then(res => {\n      const threads = res.data;\n      setData(threads);\n      console.log(threads.data);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      mb: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              p: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: \"JSON to Table Test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MUIDataTable, {\n                title: \"Lista de Entradas\",\n                data: fuckingData,\n                columns: columns,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n_s(ListAllEntries, \"M3XZsvJyxgNhzAatIKEDWrlQKEI=\");\n_c = ListAllEntries;\nexport default ListAllEntries;\nvar _c;\n$RefreshReg$(_c, \"ListAllEntries\");","map":{"version":3,"names":["axios","useEffect","useState","Divider","Box","Grid","Card","Typography","DashboardLayout","MUIDataTable","columns","name","label","options","filter","sort","customBodyRenderLite","dataIndex","rowIndex","responsive","rowsPerPage","viewColumns","pagination","selectableRows","rowsPerPageOptions","textLabels","body","noMatch","toolTip","columnHeaderTooltip","column","next","previous","displayRows","toolbar","search","downloadCsv","print","filterTable","all","title","reset","titleAria","selectedRows","text","delete","deleteAria","onRowClick","rowData","rowMeta","console","log","ListAllEntries","fuckingData","setData","get","then","res","threads","data"],"sources":["/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/listallentries/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nimport { Divider } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\n\nimport MUIDataTable from \"mui-datatables\";\n\nconst columns = [\n  {\n    name: \"name\",\n    label: \"Name\",\n    options: {\n      filter: false,\n      sort: false,\n      customBodyRenderLite: (dataIndex, rowIndex) => {\n        return (\n          <Typography variant=\"body2\" color=\"text.primary\">\n            {dataIndex, rowIndex}\n          </Typography>\n        );\n      }\n    },\n    \n  },\n  {\n    name: \"entryId\",\n    label: \"Entry ID\",\n    options: {\n      filter: false,\n      sort: false,\n    },\n  },\n  {\n    name: \"createdAt\",\n    label: \"Created At\",\n    options: {\n      filter: false,\n      sort: false,\n    },\n  },\n  {\n    name: \"updatedAt\",\n    label: \"Updated At\",\n    options: {\n      filter: false,\n      sort: false,\n    },\n  },\n];\n\nconst options = {\n  responsive: \"simple\",\n  rowsPerPage: 20,\n  viewColumns: true,\n  pagination: true,\n  selectableRows: \"none\",\n  rowsPerPageOptions: [20, 50, 100],\n  textLabels: {\n    body: {\n      noMatch: \"Sorry, no matching records found\",\n      toolTip: \"Sort\",\n      columnHeaderTooltip: (column) => `Sort for ${column.label}`,\n    },\n    pagination: {\n      next: \"Next Page\",\n      previous: \"Previous Page\",\n      rowsPerPage: \"Rows per page:\",\n      displayRows: \"of\",\n    },\n    toolbar: {\n      search: \"Search\",\n      downloadCsv: \"Download CSV\",\n      print: \"Print\",\n      viewColumns: \"View Columns\",\n      filterTable: \"Filter Table\",\n    },\n    filter: {\n      all: \"All\",\n      title: \"FILTERS\",\n      reset: \"RESET\",\n    },\n    viewColumns: {\n      title: \"Show Columns\",\n      titleAria: \"Show/Hide Table Columns\",\n    },\n    selectedRows: {\n      text: \"row(s) selected\",\n      delete: \"Delete\",\n      deleteAria: \"Delete Selected Rows\",\n    },\n  },\n\n  onRowClick: (rowData, rowMeta) => {\n    console.log(rowData);\n    console.log(rowMeta);\n  },\n};\n\nfunction ListAllEntries() {\n  const [fuckingData, setData] = useState([]);\n  useEffect(async () => {\n    axios.get(\"http://localhost:9001/entries/all\").then((res) => {\n      const threads = res.data;\n      setData(threads);\n\n      console.log(threads.data);\n    });\n  });\n\n  return (\n    <DashboardLayout>\n      <Box mt={2} mb={1}>\n        <Grid container spacing={1} justifyContent=\"center\">\n          <Grid item xs={12} lg={8}>\n            <Card>\n              <Box p={2}>\n                <Typography variant=\"h5\">JSON to Table Test</Typography>\n                <Divider>-</Divider>\n                <MUIDataTable\n                  title=\"Lista de Entradas\"\n                  data={fuckingData}\n                  columns={columns}\n                  options={options}\n                />\n              </Box>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n    </DashboardLayout>\n  );\n}\n\nexport default ListAllEntries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
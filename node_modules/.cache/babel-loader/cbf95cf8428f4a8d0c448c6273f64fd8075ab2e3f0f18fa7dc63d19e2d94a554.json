{"ast":null,"code":"var _jsxFileName = \"/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/listallentries/index.js\",\n  _s = $RefreshSig$();\nimport Typography from \"@mui/material/Typography\";\nimport axios from \"axios\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport Box from \"@mui/material/Box\";\nimport { useEffect, useState } from \"react\";\nimport * as React from \"react\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction createData(entryId, createdAt, updatedAt, name) {\n  return {\n    entryId,\n    createdAt,\n    updatedAt,\n    name\n  };\n}\nconst rows = [createData(\"\", \"\", \"\", \"\", \"\")];\nfunction ListAllEntries() {\n  _s();\n  const [data, setData] = useState([]);\n  useEffect(async () => {\n    axios.get(\"http://localhost:9001/entries/all\").then(res => {\n      const threads = res;\n      setData(threads);\n    });\n  }, []);\n  const readDataEntryID = threads => /*#__PURE__*/_jsxDEV(Typography, {\n    align: \"left\",\n    variant: \"caption\",\n    paragraph: true,\n    component: \"div\",\n    children: threads.entry_id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n  const readDataName = threads => /*#__PURE__*/_jsxDEV(Typography, {\n    align: \"left\",\n    variant: \"caption\",\n    paragraph: true,\n    component: \"div\",\n    children: threads.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      mb: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              p: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: \"API List All Entries\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), data.map(object => /*#__PURE__*/_jsxDEV(TableContainer, {\n              component: Paper,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                sx: {\n                  minWidth: 650\n                },\n                \"aria-label\": \"simple table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  children: /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: \"Dessert (100g serving)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Calories\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Fat\\xA0(g)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Carbs\\xA0(g)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 67,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: \"Protein\\xA0(g)\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 68,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n                    sx: {\n                      \"&:last-child td, &:last-child th\": {\n                        border: 0\n                      }\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      component: \"th\",\n                      scope: \"row\",\n                      children: row.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.calories\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.fat\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.carbs\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      align: \"right\",\n                      children: row.protein\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 83,\n                      columnNumber: 27\n                    }, this)]\n                  }, row.name, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 73,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(ListAllEntries, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n_c = ListAllEntries;\nexport default ListAllEntries;\nvar _c;\n$RefreshReg$(_c, \"ListAllEntries\");","map":{"version":3,"names":["Typography","axios","Grid","Card","Box","useEffect","useState","React","DashboardLayout","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","createData","entryId","createdAt","updatedAt","name","rows","ListAllEntries","data","setData","get","then","res","threads","readDataEntryID","entry_id","readDataName","map","object","minWidth","row","border","calories","fat","carbs","protein"],"sources":["/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/listallentries/index.js"],"sourcesContent":["import Typography from \"@mui/material/Typography\";\n\nimport axios from \"axios\";\n\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport Box from \"@mui/material/Box\";\n\nimport { useEffect, useState } from \"react\";\n\nimport * as React from \"react\";\n\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\n\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\n\nfunction createData(entryId, createdAt, updatedAt, name) {\n  return { entryId, createdAt, updatedAt, name };\n}\n\nconst rows = [createData(\"\", \"\", \"\", \"\", \"\")];\n\nfunction ListAllEntries() {\n  const [data, setData] = useState([]);\n  useEffect(async () => {\n    axios.get(\"http://localhost:9001/entries/all\").then((res) => {\n      const threads = res;\n      setData(threads);\n    });\n  }, []);\n\n  const readDataEntryID = (threads) => (\n    <Typography align=\"left\" variant=\"caption\" paragraph component=\"div\">\n      {threads.entry_id}\n    </Typography>\n  );\n\n  const readDataName = (threads) => (\n    <Typography align=\"left\" variant=\"caption\" paragraph component=\"div\">\n      {threads.name}\n    </Typography>\n  );\n\n  return (\n    <DashboardLayout>\n      <Box mt={2} mb={1}>\n        <Grid container spacing={1} justifyContent=\"center\">\n          <Grid item xs={12} lg={8}>\n            <Card>\n              <Box p={2}>\n                <Typography variant=\"h5\">API List All Entries</Typography>\n              </Box>\n              {data.map((object) => (\n                <TableContainer component={Paper}>\n                  <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Dessert (100g serving)</TableCell>\n                        <TableCell align=\"right\">Calories</TableCell>\n                        <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>\n                        <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>\n                        <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      {rows.map((row) => (\n                        <TableRow\n                          key={row.name}\n                          sx={{ \"&:last-child td, &:last-child th\": { border: 0 } }}\n                        >\n                          <TableCell component=\"th\" scope=\"row\">\n                            {row.name}\n                          </TableCell>\n                          <TableCell align=\"right\">{row.calories}</TableCell>\n                          <TableCell align=\"right\">{row.fat}</TableCell>\n                          <TableCell align=\"right\">{row.carbs}</TableCell>\n                          <TableCell align=\"right\">{row.protein}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              ))}\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n    </DashboardLayout>\n  );\n}\nexport default ListAllEntries;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/slackmessenger/index.js\",\n  _s = $RefreshSig$();\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\nimport Box from \"@mui/material/Box\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SlackMessenger() {\n  _s();\n  const [slackmessenger, setMessenger] = useState([]);\n  useEffect(async () => {\n    axios.get(\"http://192.168.0.23:9990/slack-thread\").then(res => {\n      const threads = res.data;\n      setMessenger(threads);\n    });\n  }, []);\n  const alertContent = threads => /*#__PURE__*/_jsxDEV(Typography, {\n    align: \"left\",\n    variant: \"body2\",\n    color: \"white\",\n    children: threads.payloadtext\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n  const replyBox = threads => /*#__PURE__*/_jsxDEV(TextField, {\n    fullWidth: true\n    // onClick={(e) => {\n    //   const myId = e.target.id;\n    //   const label = \"-label\";\n    //   console.log(threads.replied);\n    //   if (threads.replied === \"true\") {\n    //     const changeInputLabel = document.getElementById(myId + label);\n    //     changeInputLabel.textContent = \"Message Replied!\";\n    //     e.textContent = \"\";\n    //   }\n    // }}\n    ,\n    label: \"Reply Message\",\n    variant: \"standard\",\n    onKeyPress: ev => {\n      if (ev.key === \"Enter\") {\n        ev.preventDefault();\n        axios.post(\"http://192.168.0.23:9990/slack-reply\", {\n          id: threads.id,\n          payloadts: threads.payloadts,\n          payloadtext: ev.target.value\n        });\n        console.log(threads.id);\n        const myId = ev.target.id;\n        const label = \"-label\";\n        const changeInputLabel = document.getElementById(myId + label);\n        changeInputLabel.textContent = \"Message Replied!\";\n        changeInputLabel.style.color = \"green\";\n        changeInputLabel.label = \"\";\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      mb: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 0,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              p: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: \"Slack Threads: #su-sre\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), slackmessenger.map(object => /*#__PURE__*/_jsxDEV(Box, {\n              p: 1,\n              mt: 2,\n              backgroundColor: object.replied === true ? \"honeydew\" : \"aliceblue\",\n              children: [alertContent(object), replyBox(object)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(SlackMessenger, \"66CHSOzhX6JyB44R7yuoNp2netE=\");\n_c = SlackMessenger;\nexport default SlackMessenger;\nvar _c;\n$RefreshReg$(_c, \"SlackMessenger\");","map":{"version":3,"names":["Grid","Card","TextField","Typography","Box","DashboardLayout","axios","useEffect","useState","SlackMessenger","slackmessenger","setMessenger","get","then","res","threads","data","alertContent","payloadtext","replyBox","ev","key","preventDefault","post","id","payloadts","target","value","console","log","myId","label","changeInputLabel","document","getElementById","textContent","style","color","map","object","replied"],"sources":["/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/slackmessenger/index.js"],"sourcesContent":["import Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport TextField from \"@mui/material/TextField\";\nimport Typography from \"@mui/material/Typography\";\n\nimport Box from \"@mui/material/Box\";\n\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\n\nimport axios from \"axios\";\n\nimport { useEffect, useState } from \"react\";\n\nfunction SlackMessenger() {\n  const [slackmessenger, setMessenger] = useState([]);\n\n  useEffect(async () => {\n    axios.get(\"http://192.168.0.23:9990/slack-thread\").then((res) => {\n      const threads = res.data;\n      setMessenger(threads);\n    });\n  }, []);\n  const alertContent = (threads) => (\n    <Typography align=\"left\" variant=\"body2\" color=\"white\">\n      {threads.payloadtext}\n    </Typography>\n  );\n\n  const replyBox = (threads) => (\n    <TextField\n      fullWidth\n      // onClick={(e) => {\n      //   const myId = e.target.id;\n      //   const label = \"-label\";\n      //   console.log(threads.replied);\n      //   if (threads.replied === \"true\") {\n      //     const changeInputLabel = document.getElementById(myId + label);\n      //     changeInputLabel.textContent = \"Message Replied!\";\n      //     e.textContent = \"\";\n      //   }\n      // }}\n      label=\"Reply Message\"\n      variant=\"standard\"\n      onKeyPress={(ev) => {\n        if (ev.key === \"Enter\") {\n          ev.preventDefault();\n          axios.post(\"http://192.168.0.23:9990/slack-reply\", {\n            id: threads.id,\n            payloadts: threads.payloadts,\n            payloadtext: ev.target.value,\n          });\n          console.log(threads.id);\n          const myId = ev.target.id;\n          const label = \"-label\";\n          const changeInputLabel = document.getElementById(myId + label);\n          changeInputLabel.textContent = \"Message Replied!\";\n          changeInputLabel.style.color = \"green\";\n          changeInputLabel.label = \"\";\n        }\n      }}\n    />\n  );\n\n  return (\n    <DashboardLayout>\n      <Box mt={2} mb={1}>\n        <Grid container spacing={0} justifyContent=\"center\">\n          <Grid item xs={12} lg={8}>\n            <Card>\n              <Box p={2}>\n                <Typography variant=\"h5\">Slack Threads: #su-sre</Typography>\n              </Box>\n              {slackmessenger.map((object) => (\n                <Box\n                  p={1}\n                  mt={2}\n                  backgroundColor={object.replied === true ? \"honeydew\" : \"aliceblue\"}\n                >\n                  {alertContent(object)}\n                  {replyBox(object)}\n                </Box>\n              ))}\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n    </DashboardLayout>\n  );\n}\n\nexport default SlackMessenger;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
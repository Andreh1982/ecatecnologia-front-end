{"ast":null,"code":"var _jsxFileName = \"/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/listallentries/index.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Divider } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\nimport MUIDataTable from \"mui-datatables\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  name: \"name\",\n  label: \"Name\",\n  options: {\n    filter: true,\n    sort: true\n  }\n}, {\n  name: \"entryId\",\n  label: \"Entry ID\",\n  options: {\n    filter: true,\n    sort: false\n  }\n}, {\n  name: \"createdAt\",\n  label: \"Created At\",\n  options: {\n    filter: true,\n    sort: false\n  }\n}, {\n  name: \"updatedAt\",\n  label: \"Updated At\",\n  options: {\n    filter: true,\n    sort: false\n  }\n}];\nconst options = {\n  filterType: \"checkbox\"\n};\nfunction ListAllEntries() {\n  _s();\n  const [fuckingData, setData] = useState([]);\n  useEffect(async () => {\n    axios.get(\"http://localhost:9001/entries/all\").then(res => {\n      const threads = res.data;\n      setData(threads);\n      console.log(fuckingData);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(DashboardLayout, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      mb: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          lg: 8,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              p: 2,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h5\",\n                children: \"JSON to Table Test\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(MUIDataTable, {\n                title: \"Lista de Entradas\",\n                data: fuckingData,\n                columns: columns,\n                options: options\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(ListAllEntries, \"M3XZsvJyxgNhzAatIKEDWrlQKEI=\");\n_c = ListAllEntries;\nexport default ListAllEntries;\nvar _c;\n$RefreshReg$(_c, \"ListAllEntries\");","map":{"version":3,"names":["axios","useEffect","useState","Divider","Box","Grid","Card","Typography","DashboardLayout","MUIDataTable","columns","name","label","options","filter","sort","filterType","ListAllEntries","fuckingData","setData","get","then","res","threads","data","console","log"],"sources":["/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/listallentries/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nimport { Divider } from \"@mui/material\";\nimport Box from \"@mui/material/Box\";\nimport Grid from \"@mui/material/Grid\";\nimport Card from \"@mui/material/Card\";\nimport Typography from \"@mui/material/Typography\";\nimport DashboardLayout from \"examples/LayoutContainers/DashboardLayout\";\n\nimport MUIDataTable from \"mui-datatables\";\n\nconst columns = [\n  {\n    name: \"name\",\n    label: \"Name\",\n    options: {\n      filter: true,\n      sort: true,\n    },\n  },\n  {\n    name: \"entryId\",\n    label: \"Entry ID\",\n    options: {\n      filter: true,\n      sort: false,\n    },\n  },\n  {\n    name: \"createdAt\",\n    label: \"Created At\",\n    options: {\n      filter: true,\n      sort: false,\n    },\n  },\n  {\n    name: \"updatedAt\",\n    label: \"Updated At\",\n    options: {\n      filter: true,\n      sort: false,\n    },\n  },\n];\n\nconst options = {\n  filterType: \"checkbox\",\n};\n\nfunction ListAllEntries() {\n  const [fuckingData, setData] = useState([]);\n  useEffect(async () => {\n    axios.get(\"http://localhost:9001/entries/all\").then((res) => {\n      const threads = res.data;\n      setData(threads);\n\n      console.log(fuckingData);\n    });\n  });\n\n  return (\n    <DashboardLayout>\n      <Box mt={2} mb={1}>\n        <Grid container spacing={1} justifyContent=\"center\">\n          <Grid item xs={12} lg={8}>\n            <Card>\n              <Box p={2}>\n                <Typography variant=\"h5\">JSON to Table Test</Typography>\n                <Divider>-</Divider>\n                <MUIDataTable\n                  title=\"Lista de Entradas\"\n                  data={fuckingData}\n                  columns={columns}\n                  options={options}\n                />\n              </Box>\n            </Card>\n          </Grid>\n        </Grid>\n      </Box>\n    </DashboardLayout>\n  );\n}\n\nexport default ListAllEntries;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAE3C,SAASC,OAAO,QAAQ,eAAe;AACvC,OAAOC,GAAG,MAAM,mBAAmB;AACnC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,IAAI,MAAM,oBAAoB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,eAAe,MAAM,2CAA2C;AAEvE,OAAOC,YAAY,MAAM,gBAAgB;AAAC;AAE1C,MAAMC,OAAO,GAAG,CACd;EACEC,IAAI,EAAE,MAAM;EACZC,KAAK,EAAE,MAAM;EACbC,OAAO,EAAE;IACPC,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE;EACR;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,SAAS;EACfC,KAAK,EAAE,UAAU;EACjBC,OAAO,EAAE;IACPC,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE;EACR;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,YAAY;EACnBC,OAAO,EAAE;IACPC,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE;EACR;AACF,CAAC,EACD;EACEJ,IAAI,EAAE,WAAW;EACjBC,KAAK,EAAE,YAAY;EACnBC,OAAO,EAAE;IACPC,MAAM,EAAE,IAAI;IACZC,IAAI,EAAE;EACR;AACF,CAAC,CACF;AAED,MAAMF,OAAO,GAAG;EACdG,UAAU,EAAE;AACd,CAAC;AAED,SAASC,cAAc,GAAG;EAAA;EACxB,MAAM,CAACC,WAAW,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC3CD,SAAS,CAAC,YAAY;IACpBD,KAAK,CAACoB,GAAG,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MAC3D,MAAMC,OAAO,GAAGD,GAAG,CAACE,IAAI;MACxBL,OAAO,CAACI,OAAO,CAAC;MAEhBE,OAAO,CAACC,GAAG,CAACR,WAAW,CAAC;IAC1B,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,oBACE,QAAC,eAAe;IAAA,uBACd,QAAC,GAAG;MAAC,EAAE,EAAE,CAAE;MAAC,EAAE,EAAE,CAAE;MAAA,uBAChB,QAAC,IAAI;QAAC,SAAS;QAAC,OAAO,EAAE,CAAE;QAAC,cAAc,EAAC,QAAQ;QAAA,uBACjD,QAAC,IAAI;UAAC,IAAI;UAAC,EAAE,EAAE,EAAG;UAAC,EAAE,EAAE,CAAE;UAAA,uBACvB,QAAC,IAAI;YAAA,uBACH,QAAC,GAAG;cAAC,CAAC,EAAE,CAAE;cAAA,wBACR,QAAC,UAAU;gBAAC,OAAO,EAAC,IAAI;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAgC,eACxD,QAAC,OAAO;gBAAA;cAAA;gBAAA;gBAAA;gBAAA;cAAA,QAAY,eACpB,QAAC,YAAY;gBACX,KAAK,EAAC,mBAAmB;gBACzB,IAAI,EAAEA,WAAY;gBAClB,OAAO,EAAER,OAAQ;gBACjB,OAAO,EAAEG;cAAQ;gBAAA;gBAAA;gBAAA;cAAA,QACjB;YAAA;cAAA;cAAA;cAAA;YAAA;UACE;YAAA;YAAA;YAAA;UAAA;QACD;UAAA;UAAA;UAAA;QAAA;MACF;QAAA;QAAA;QAAA;MAAA;IACF;MAAA;MAAA;MAAA;IAAA;EACH;IAAA;IAAA;IAAA;EAAA,QACU;AAEtB;AAAC,GAjCQI,cAAc;AAAA,KAAdA,cAAc;AAmCvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/listallentries/index.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport Table from \"./Table\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst [data, setData] = useState([]);\nconst [totalPages, setTotalPages] = useState(1);\nconst [entry_id, setEntryId] = useState(1);\nconst [name, setName] = useState(1);\nconst [created_at, setCreatedAt] = useState(1);\nconst [updated_at, setUpdatedAt] = useState(1);\nconst columns = useMemo(() => [{\n  // Primeiro grupo - Informações do passageiro\n  Header: \"Informações do passageiro\",\n  // Colunas do primeiro grupo\n  columns: [{\n    Header: \"Nome\",\n    accessor: \"name\"\n  }, {\n    Header: \"Viagens\",\n    accessor: \"trips\"\n  }]\n}, {\n  // Segundo grupo - Detalhes do vôo\n  Header: \"Detalhes do vôo\",\n  // Colunas do segundo grupo\n  columns: [{\n    Header: \"Nome\",\n    accessor: \"airline[0].name\"\n  }, {\n    Header: \"País\",\n    accessor: \"airline[0].country\"\n  }, {\n    Header: \"Slogan\",\n    accessor: \"airline[0].slogan\"\n  }]\n}], []);\nfunction ListAllEntries() {\n  _s();\n  useEffect(async () => {\n    axios.get(\"http://localhost:9001/entries/all\").then(res => {\n      const {\n        data,\n        totalPages,\n        entry_id,\n        name,\n        created_at,\n        updated_at\n      } = res.data;\n      setData(data);\n      setTotalPages(totalPages);\n      setEntryId(entry_id);\n      setName(name);\n      setCreatedAt(created_at);\n      setUpdatedAt(updated_at);\n    });\n    const threads = res;\n    setData(threads);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n_s(ListAllEntries, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ListAllEntries;\nexport default ListAllEntries;\nvar _c;\n$RefreshReg$(_c, \"ListAllEntries\");","map":{"version":3,"names":["axios","useEffect","useMemo","useState","Table","data","setData","totalPages","setTotalPages","entry_id","setEntryId","name","setName","created_at","setCreatedAt","updated_at","setUpdatedAt","columns","Header","accessor","ListAllEntries","get","then","res","threads"],"sources":["/home/atorres/Dev/JS/slack-chat-bot-frontend-reactjs/src/layouts/listallentries/index.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useMemo, useState } from \"react\";\nimport Table from \"./Table\";\n\nconst [data, setData] = useState([])\nconst [totalPages, setTotalPages] = useState(1)\nconst [entry_id, setEntryId] = useState(1)\nconst [name, setName] = useState(1)\nconst [created_at, setCreatedAt] = useState(1)\nconst [updated_at, setUpdatedAt] = useState(1)\n\nconst columns = useMemo(\n  () => [\n    {\n      // Primeiro grupo - Informações do passageiro\n      Header: \"Informações do passageiro\",\n      // Colunas do primeiro grupo\n      columns: [\n        {\n          Header: \"Nome\",\n          accessor: \"name\",\n        },\n        {\n          Header: \"Viagens\",\n          accessor: \"trips\",\n        },\n      ]\n    },\n    {\n      // Segundo grupo - Detalhes do vôo\n      Header: \"Detalhes do vôo\",\n      // Colunas do segundo grupo\n      columns: [\n        {\n          Header: \"Nome\",\n          accessor: \"airline[0].name\",\n        },\n        {\n          Header: \"País\",\n          accessor: \"airline[0].country\",\n        },\n        {\n          Header: \"Slogan\",\n          accessor: \"airline[0].slogan\",\n        },\n      ]\n    }\n  ],\n  []\n);\n\nfunction ListAllEntries() {\n  useEffect(async () => {\n    axios.get(\"http://localhost:9001/entries/all\").then((res) => {\n      const { data, totalPages, entry_id, name, created_at, updated_at } = res.data\n      setData(data)\n      setTotalPages(totalPages)\n      setEntryId(entry_id)\n      setName(name)\n      setCreatedAt(created_at)\n      setUpdatedAt(updated_at)\n    });\n\n    const threads = res;\n    setData(threads);\n  });\n\n  return (\n    <div>\n      <Table columns={columns} data={data} />\n    </div>\n  );\n}\nexport default ListAllEntries;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,OAAO,EAAEC,QAAQ,QAAQ,OAAO;AACpD,OAAOC,KAAK,MAAM,SAAS;AAAC;AAE5B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGH,QAAQ,CAAC,EAAE,CAAC;AACpC,MAAM,CAACI,UAAU,EAAEC,aAAa,CAAC,GAAGL,QAAQ,CAAC,CAAC,CAAC;AAC/C,MAAM,CAACM,QAAQ,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC;AAC1C,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;AACnC,MAAM,CAACU,UAAU,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;AAC9C,MAAM,CAACY,UAAU,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;AAE9C,MAAMc,OAAO,GAAGf,OAAO,CACrB,MAAM,CACJ;EACE;EACAgB,MAAM,EAAE,2BAA2B;EACnC;EACAD,OAAO,EAAE,CACP;IACEC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,MAAM,EAAE,SAAS;IACjBC,QAAQ,EAAE;EACZ,CAAC;AAEL,CAAC,EACD;EACE;EACAD,MAAM,EAAE,iBAAiB;EACzB;EACAD,OAAO,EAAE,CACP;IACEC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,MAAM,EAAE,QAAQ;IAChBC,QAAQ,EAAE;EACZ,CAAC;AAEL,CAAC,CACF,EACD,EAAE,CACH;AAED,SAASC,cAAc,GAAG;EAAA;EACxBnB,SAAS,CAAC,YAAY;IACpBD,KAAK,CAACqB,GAAG,CAAC,mCAAmC,CAAC,CAACC,IAAI,CAAEC,GAAG,IAAK;MAC3D,MAAM;QAAElB,IAAI;QAAEE,UAAU;QAAEE,QAAQ;QAAEE,IAAI;QAAEE,UAAU;QAAEE;MAAW,CAAC,GAAGQ,GAAG,CAAClB,IAAI;MAC7EC,OAAO,CAACD,IAAI,CAAC;MACbG,aAAa,CAACD,UAAU,CAAC;MACzBG,UAAU,CAACD,QAAQ,CAAC;MACpBG,OAAO,CAACD,IAAI,CAAC;MACbG,YAAY,CAACD,UAAU,CAAC;MACxBG,YAAY,CAACD,UAAU,CAAC;IAC1B,CAAC,CAAC;IAEF,MAAMS,OAAO,GAAGD,GAAG;IACnBjB,OAAO,CAACkB,OAAO,CAAC;EAClB,CAAC,CAAC;EAEF,oBACE;IAAA,uBACE,QAAC,KAAK;MAAC,OAAO,EAAEP,OAAQ;MAAC,IAAI,EAAEZ;IAAK;MAAA;MAAA;MAAA;IAAA;EAAG;IAAA;IAAA;IAAA;EAAA,QACnC;AAEV;AAAC,GArBQe,cAAc;AAAA,KAAdA,cAAc;AAsBvB,eAAeA,cAAc;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}